{"version":3,"sources":["components/Wrapper/index.js","components/Cards/index.js","components/Header/index.js","components/Navbar/index.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","className","Cards","props","alt","last","src","image","title","first","gender","age","phone","email","Header","state","alphabetical","ascending","sortedEmployees","employees","sortName","sortEmp","empList","sort","a","b","nameA","name","toLowerCase","nameB","setState","sortAge","dob","this","length","prevProps","onClick","map","item","index","picture","large","React","Component","Navbar","searchTerm","filteredEmployees","handleInputChange","event","target","value","userTyped","filteredList","filter","cell","indexOf","onChange","type","placeholder","App","axios","get","then","res","data","results","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9900bcaa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper() {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"title\">Employee Directory</div>\n    </div>\n  );\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Cards(props) {\n  return (\n    <div className=\"cards\">\n      <div>\n        <img alt={props.last} src={props.image}></img>\n      </div>\n      <div>\n        {props.title} {props.first} {props.last}{\" \"}\n      </div>\n      <div>{props.gender}</div>\n      <div>{props.age}</div>\n      <div>{props.phone}</div>\n      <div>{props.email}</div>\n    </div>\n  );\n}\n\nexport default Cards;\n","import React from \"react\";\nimport \"./style.css\";\nimport Card from \"../Cards\";\n\nclass Header extends React.Component {\n  state = {\n    alphabetical: true,\n    ascending: true,\n    sortedEmployees: [],\n    employees: [],\n  };\n\n  componentDidMount() {\n    if (this.state.sortedEmployees.length < 1) {\n      this.setState({\n        sortedEmployees: this.props.empList,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.empList !== prevProps.empList) {\n      this.setState({\n        sortedEmployees: this.props.empList,\n      });\n    }\n  }\n\n  sortName = () => {\n    let sortEmp = [];\n    if (this.state.alphabetical) {\n      sortEmp = this.props.empList.sort((a, b) => {\n        var nameA = a.name.last.toLowerCase(),\n          nameB = b.name.last.toLowerCase();\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0;\n      });\n    } else {\n      sortEmp = this.props.empList.sort((a, b) => {\n        var nameA = a.name.last.toLowerCase(),\n          nameB = b.name.last.toLowerCase();\n        if (nameA > nameB) return -1;\n        if (nameA < nameB) return 1;\n        return 0;\n      });\n    }\n    this.setState({\n      alphabetical: !this.state.alphabetical,\n      sortedEmployees: sortEmp,\n    });\n  };\n\n  sortAge = () => {\n    let sortEmp = [];\n    if (this.state.ascending) {\n      sortEmp = this.props.empList.sort((a, b) => {\n        var nameA = a.dob.age,\n          nameB = b.dob.age;\n        if (nameA < nameB) return -1;\n        if (nameA > nameB) return 1;\n        return 0;\n      });\n    } else {\n      sortEmp = this.props.empList.sort((a, b) => {\n        var nameA = a.dob.age,\n          nameB = b.dob.age;\n        if (nameA > nameB) return -1;\n        if (nameA < nameB) return 1;\n        return 0;\n      });\n    }\n    this.setState({\n      ascending: !this.state.ascending,\n      sortedEmployees: sortEmp,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"header\">\n          <div>Photo</div>\n          <div>\n            <p onClick={this.sortName} className=\"name\">\n              Name\n            </p>{\" \"}\n          </div>\n          <div>Gender</div>\n          <div>\n            <p onClick={this.sortAge} className=\"age\">\n              Age\n            </p>\n          </div>\n          <div>E-mail</div>\n        </div>\n\n        {this.state.sortedEmployees.length > 0 &&\n          this.state.sortedEmployees.map((item, index) => (\n            <Card\n              image={item.picture.large}\n              first={item.name.first}\n              last={item.name.last}\n              title={item.name.title}\n              gender={item.gender}\n              age={item.dob.age}\n              email={item.email}\n            />\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\nimport Header from \"../Header\";\n\nclass Navbar extends React.Component {\n  state = {\n    searchTerm: \"\",\n    filteredEmployees: [],\n  };\n\n  componentDidMount() {\n    if (this.state.filteredEmployees.length < 1) {\n      this.setState({\n        filteredEmployees: this.props.employees,\n      });\n    }\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      searchTerm: event.target.value,\n    });\n    let userTyped = event.target.value;\n    const filteredList = this.props.employees.filter((item) => {\n      let values =\n        item.name.title +\n        item.name.first +\n        item.name.last +\n        item.gender +\n        item.dob.age +\n        item.email +\n        item.cell;\n      return values.indexOf(userTyped) !== -1;\n    });\n\n    this.setState({\n      filteredEmployees: filteredList,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* {this.fillList} */}\n        <form className=\"form\">\n          <input\n            value={this.state.searchTerm}\n            name=\"searchTerm\"\n            onChange={(event) => this.handleInputChange(event)}\n            type=\"text\"\n            placeholder=\"Search\"\n          />\n        </form>\n        {this.state.filteredEmployees.length > 0 && (\n          <Header empList={this.state.filteredEmployees} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\n\nclass App extends React.Component {\n  state = {\n    employees: [],\n  };\n\n  componentDidMount() {\n    axios.get(`https://randomuser.me/api/?results=25`).then((res) => {\n      this.setState({ employees: res.data.results });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Wrapper />\n        {this.state.employees.length > 0 && (\n          <Navbar employees={this.state.employees} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// https://stackoverflow.com/questions/53737280/how-to-add-service-worker-in-react-project\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}